<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="firstportfolio.wordcharger.repository.MemberMapper">



    <select id="findMemberById" resultType="MemberJoinDTO">
        SELECT * FROM member
        WHERE USER_ID = #{userId}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <select id="findUserIdById" resultType="String">
        SELECT user_id FROM member
        WHERE id = #{id}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <insert id="insertMember">
        INSERT INTO member
        (ID, USER_ID, PASSWORD, USER_NAME, DELETE_MEMBER_FL)
        VALUES (#{nextSequenceValue}, #{userId}, #{password}, #{userName}, default)
    </insert>

    <!--시퀀스의 다음값 얻어오기-->
    <select id="selectNextSequenceValue" resultType="Integer">
        SELECT MEMBER_SEQUENCE.NEXTVAL FROM DUAL
    </select>

    <select id="findMemberTotalData" resultType="MemberAllDataFindDTO">
        SELECT
        member.*,
        phone.phone_num_start,
        phone.phone_num_middle,
        phone.phone_num_end,
        address.zip_code,
        address.street_address,
        address.address,
        address.detail_address,
        address.reference_item,
        email.email,
        email.domain
        FROM member
        LEFT JOIN phone ON member.id = phone.member_id
        LEFT JOIN address ON member.id = address.member_id
        LEFT JOIN email ON member.id = email.member_id
        WHERE member.id = ${id}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <select id="findPwById" resultType="String">
        SELECT password FROM member
        WHERE id = #{id}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <update id="updatePassword">
        UPDATE member
        SET password = #{password}
        WHERE id = #{id}
        AND DELETE_MEMBER_FL = 'N'
    </update>


    <select id="findUserNameByEmailAndDomain" resultType="String">
        SELECT user_name FROM member M
        JOIN EMAIL E ON (M.id = E.member_id)
        WHERE email = #{email}
        AND domain = #{domain}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <select id="findUserIdByUserNameAndEmailAndDomain" resultType="String">
        SELECT user_id FROM member M
        JOIN EMAIL E ON (M.id = E.member_id)
        WHERE user_name = #{userName}
        AND email = #{email}
        AND domain = #{domain}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <select id="findUserNameAndEmailAndDomainByUserId" resultType="MemberAllDataFindDTO">
        SELECT user_name, email, domain FROM member M
        JOIN EMAIL E ON (M.id = E.member_id)
        WHERE user_id = #{userId}
        AND DELETE_MEMBER_FL = 'N'
    </select>

    <update id="updateDeleteMemberFl">
        UPDATE member SET
        delete_member_fl = 'Y'
        WHERE id = #{id}
    </update>



</mapper>